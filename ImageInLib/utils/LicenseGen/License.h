// License.h: interface for the CCertificate class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_LICENSE_H__2551BD1A_29CC_49F1_8666_DE92DFF8B71E__INCLUDED_)
#define AFX_LICENSE_H__2551BD1A_29CC_49F1_8666_DE92DFF8B71E__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#include "Security.h"
#include "TaggedDataBuffer.h"
#include "KeyRing.h"
#include "Signature.h"

//////////////////////////////////////////////////////////////////////
//
// License defines
//
//////////////////////////////////////////////////////////////////////

#define LICENSE_TAG(t)			((DWORD)(t))

// Reserved tags: LICENSE_TAG(0) - LICENSE_TAG(255)

#define LICENSE_TAG_MAIN_SEQ		LICENSE_TAG(1)		// ROOT >> SEQUENCE[1]
#define LICENSE_TAG_SIGNATURE_SEQ	LICENSE_TAG(2)		// ROOT >> SEQUENCE[1]

#define LICENSE_TAG_VERSION			LICENSE_TAG(1)		// LICENSE_TAG_MAIN_SEQ >> DWORD
#define LICENSE_TAG_TYPE			LICENSE_TAG(2)		// LICENSE_TAG_MAIN_SEQ >> DWORD
#define LICENSE_TAG_ID				LICENSE_TAG(4)		// LICENSE_TAG_MAIN_SEQ >> BINARY
#define LICENSE_TAG_APPLICATION		LICENSE_TAG(3)		// LICENSE_TAG_MAIN_SEQ >> BINARY
#define LICENSE_TAG_ISSUER			LICENSE_TAG(5)		// LICENSE_TAG_MAIN_SEQ >> STRING
#define LICENSE_TAG_SUBJECT			LICENSE_TAG(6)		// LICENSE_TAG_MAIN_SEQ >> STRING
#define LICENSE_TAG_FEATURE			LICENSE_TAG(7)		// LICENSE_TAG_MAIN_SEQ >> STRING
#define LICENSE_TAG_FEATURE_DESC	LICENSE_TAG(8)		// LICENSE_TAG_MAIN_SEQ >> STRING
#define LICENSE_TAG_FEATURE_ID		LICENSE_TAG(9)		// LICENSE_TAG_MAIN_SEQ >> BINARY[16]
#define LICENSE_TAG_COMMENT			LICENSE_TAG(10)		// LICENSE_TAG_MAIN_SEQ >> STRING
#define LICENSE_TAG_VALID_FROM		LICENSE_TAG(11)		// LICENSE_TAG_MAIN_SEQ >> LONG(DATE)
#define LICENSE_TAG_VALID_TO		LICENSE_TAG(12)		// LICENSE_TAG_MAIN_SEQ >> LONG(DATE)
#define LICENSE_TAG_HASP_SEQ		LICENSE_TAG(13)		// LICENSE_TAG_MAIN_SEQ >> SEQUENCE[1]
#define LICENSE_TAG_SECRET_SEQ		LICENSE_TAG(14)		// LICENSE_TAG_MAIN_SEQ >> SEQUENCE[1]
#define LICENSE_TAG_SECRET_BLOCK	LICENSE_TAG(15)		// LICENSE_TAG_MAIN_SEQ >> BINARY[64*(4+64)]
#define LICENSE_TAG_SECRET_SEED		LICENSE_TAG(16)		// LICENSE_TAG_MAIN_SEQ >> BINARY
#define LICENSE_TAG_FEATURE_DATA	LICENSE_TAG(17)		// LICENSE_TAG_MAIN_SEQ >> BINARY

#define LICENSE_TAG_HASP_HASPID		LICENSE_TAG(1)		// LICENSE_TAG_HASP_SEQ >> DWORD
#define LICENSE_TAG_HASP_SALT		LICENSE_TAG(2)		// LICENSE_TAG_HASP_SEQ >> BINARY[64]

#define LICENSE_TAG_SECRET_ID		LICENSE_TAG(1)		// LICENSE_TAG_SECRET_SEQ >> DWORD
#define LICENSE_TAG_SECRET_DATA		LICENSE_TAG(2)		// LICENSE_TAG_SECRET_SEQ >> BINARY[64]

#define LICENSE_TAG_SIGN_ALGO		LICENSE_TAG(1)		// LICENSE_TAG_SIGNATURE_SEQ >> DWORD
#define LICENSE_TAG_SIGN_KEY_ID		LICENSE_TAG(2)		// LICENSE_TAG_SIGNATURE_SEQ >> BINARY
#define LICENSE_TAG_SIGN_DATA		LICENSE_TAG(3)		// LICENSE_TAG_SIGNATURE_SEQ >> BINARY

#define LICENSE_TYPE_HASP			((DWORD)0)

#define LICENSE_SIGNATURE_DSA_SHA1		((DWORD)0)
#define LICENSE_SIGNATURE_RSA_MD5		((DWORD)1)
#define LICENSE_SIGNATURE_RSA_SHA1		((DWORD)2)
#define LICENSE_SIGNATURE_RSA_MD5_SHA1	((DWORD)3)



#endif // !defined(AFX_LICENSE_H__2551BD1A_29CC_49F1_8666_DE92DFF8B71E__INCLUDED_)
